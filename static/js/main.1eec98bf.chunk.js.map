{"version":3,"sources":["QuoteDiv.js","ButtonDiv.js","MainDiv.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteDiv","props","className","id","this","quote","author","Component","connect","state","ButtonDiv","newQuote","fetch","then","response","json","dispatch","type","content","_id","bind","target","rel","href","onClick","MainDiv","React","id_array","NEW_QUOTE","defaultState","store","createStore","action","App","from","opacity","to","config","delay","style","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAGMA,E,kDACJ,WAAYC,GAAQ,uCACZA,G,qDAIN,OACE,sBAAKC,UAAU,WAAf,UACE,mBAAGC,GAAG,OAAN,SAAcC,KAAKH,MAAMI,QACzB,oBAAGF,GAAG,SAAN,oBAAkBC,KAAKH,MAAMK,iB,GATdC,aAoBRC,eALS,SAACC,GAAD,MAAY,CAClCJ,MAAOI,EAAMJ,MACbC,OAAQG,EAAMH,UAGDE,CAAyBR,G,QCpBlCU,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAQRU,SAAW,WACTC,MAAM,gDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKb,MAAMe,SAAS,CACpCC,KAAM,YACNZ,MAAOS,EAASI,QAChBZ,OAAQQ,EAASR,OACjBa,IAAKL,EAASK,UAdlB,EAAKR,SAAW,EAAKA,SAASS,KAAd,gBAFC,E,gEAMjBhB,KAAKO,a,+BAeL,OACE,sBAAKT,UAAU,YAAf,UACE,mBACEA,UAAU,kBACVC,GAAG,cACHkB,OAAO,SACPC,IAAI,sBACJC,KAAM,yCAA2CnB,KAAKH,MAAMI,MAAQ,gBAAaD,KAAKH,MAAMK,OAL9F,yBASA,wBACEH,GAAG,YACHD,UAAU,kBACVsB,QAASpB,KAAKO,SAHhB,8B,GAjCgBJ,aAkDTC,eALS,SAACC,GAAD,MAAY,CAClCJ,MAAOI,EAAMJ,MACbC,OAAQG,EAAMH,UAGDE,CAAyBE,GChDlCe,E,kDACF,WAAYxB,GAAQ,uCACVA,G,qDAIN,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKC,GAAG,YAAR,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,sBAAKA,GAAG,SAAR,mBAEE,mBACAA,GAAG,cACHoB,KAAK,6CACLF,OAAO,SACPC,IAAI,sBAJJ,wC,GAdQI,IAAMnB,WAiCbC,eALS,SAACC,GAAD,MAAY,CAClCJ,MAAOI,EAAMJ,MACbC,OAAQG,EAAMH,OACdqB,SAAUlB,EAAMkB,YAEHnB,CAAyBiB,G,gBChClCG,EAAY,YAEZC,EAAe,CACnBxB,MAAO,GACPC,OAAQ,GACRqB,SAAU,IAgBZ,IAAMG,EAAQC,aAbd,WAAoD,IAA/BtB,EAA8B,uDAAtBoB,EAAcG,EAAQ,uCACjD,OAAOA,EAAOf,MACZ,KAAKW,EACH,MAAO,CACLvB,MAAO2B,EAAO3B,MACdC,OAAQ0B,EAAO1B,OACfqB,SAAS,GAAD,mBAAMlB,EAAMkB,UAAZ,CAAsBK,EAAOb,OAEzC,QACE,OAAOV,MAwBEwB,MAlBf,WACE,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,SAAD,CACEI,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,GACfE,OAAQ,CAAEC,MAAO,KAHnB,SAKG,SAAArC,GAAK,OACJ,qBAAKsC,MAAOtC,EAAZ,SACE,cAAC,EAAD,YC3BGuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1eec98bf.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nclass QuoteDiv extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"QuoteDiv\">\r\n        <p id=\"text\">{this.props.quote}</p>\r\n        <p id=\"author\">— {this.props.author}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quote: state.quote,\r\n  author: state.author,\r\n})\r\n\r\nexport default connect(mapStateToProps)(QuoteDiv)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\n\r\nclass ButtonDiv extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.newQuote = this.newQuote.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.newQuote()\r\n  }\r\n\r\n  newQuote = () => {\r\n    fetch('https://api.quotable.io/random?maxLength=200')\r\n      .then(response => response.json())\r\n      .then(response => this.props.dispatch({\r\n        type: 'NEW_QUOTE',\r\n        quote: response.content,\r\n        author: response.author,\r\n        _id: response._id,\r\n      }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ButtonDiv\">\r\n        <a \r\n          className=\"btn btn-primary\" \r\n          id=\"tweet-quote\" \r\n          target=\"_blank\" \r\n          rel=\"noopener noreferrer\" \r\n          href={'https://twitter.com/intent/tweet?text=' + this.props.quote + '%0A%0A— ' + this.props.author}\r\n        >\r\n          Tweet Quote\r\n        </a>\r\n        <button \r\n          id=\"new-quote\" \r\n          className=\"btn btn-primary\" \r\n          onClick={this.newQuote}\r\n        >\r\n          New Quote\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quote: state.quote,\r\n  author: state.author,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ButtonDiv)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport QuoteDiv from './QuoteDiv.js'\r\nimport ButtonDiv from './ButtonDiv.js'\r\n\r\nclass MainDiv extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"MainDiv\">\r\n            <div id=\"quote-box\">\r\n              <QuoteDiv />\r\n              <ButtonDiv />\r\n            </div>\r\n            <div id=\"credit\">\r\n              by&nbsp;\r\n              <a \r\n              id=\"credit-name\" \r\n              href=\"https://www.linkedin.com/in/nicolas-poore/\" \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              >\r\n                Nicolás Poore\r\n              </a>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quote: state.quote,\r\n  author: state.author,\r\n  id_array: state.id_array,\r\n})\r\nexport default connect(mapStateToProps)(MainDiv);","import './App.css';\nimport MainDiv from './MainDiv.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { Spring } from 'react-spring/renderprops';\n\nconst NEW_QUOTE = 'NEW_QUOTE'\n\nconst defaultState = {\n  quote: '',\n  author: '',\n  id_array: []\n}\n\nfunction rootReducer(state = defaultState, action) {\n  switch(action.type) {\n    case NEW_QUOTE:\n      return {\n        quote: action.quote,\n        author: action.author,\n        id_array: [...state.id_array, action._id]\n      }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(rootReducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 300 }}\n      >\n        {props => (\n          <div style={props}>\n            <MainDiv />\n          </div>\n        )}\n      </Spring>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}