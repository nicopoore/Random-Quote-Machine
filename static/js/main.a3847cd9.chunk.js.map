{"version":3,"sources":["QuoteDiv.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteDiv","props","newQuote","fetch","then","response","json","dispatch","type","quote","content","author","_id","bind","this","className","id","target","rel","href","onClick","React","Component","connect","state","id_array","NEW_QUOTE","defaultState","store","createStore","action","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAGMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,SAAW,WACTC,MAAM,gDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKJ,MAAMM,SAAS,CACpCC,KAAM,YACNC,MAAOJ,EAASK,QAChBC,OAAQN,EAASM,OACjBC,IAAKP,EAASO,UAdhB,EAAKV,SAAW,EAAKA,SAASW,KAAd,gBAFD,E,gEAMjBC,KAAKZ,a,+BAeH,OACI,sBAAKa,UAAU,WAAf,UACE,sBAAKC,GAAG,YAAR,UACE,mBAAGA,GAAG,OAAN,SAAcF,KAAKb,MAAMQ,QACzB,oBAAGO,GAAG,SAAN,oBAAkBF,KAAKb,MAAMU,UAC7B,sBAAKK,GAAG,UAAR,UACI,mBAAGD,UAAU,kBAAkBC,GAAG,cAAcC,OAAO,SAASC,IAAI,sBAAsBC,KAAM,yCAA2CL,KAAKb,MAAMQ,MAAQ,gBAAaK,KAAKb,MAAMU,OAAtL,yBAGA,wBAAQK,GAAG,YAAYD,UAAU,kBAAkBK,QAASN,KAAKZ,SAAjE,6BAKN,sBAAKc,GAAG,SAAR,gBACK,mBAAGA,GAAG,cAAcG,KAAK,6CAA6CF,OAAO,SAASC,IAAI,sBAA1F,wC,GArCIG,IAAMC,WAiDdC,eALS,SAACC,GAAD,MAAY,CAClCf,MAAOe,EAAMf,MACbE,OAAQa,EAAMb,OACdc,SAAUD,EAAMC,YAEHF,CAAyBvB,G,OC/ClC0B,EAAY,YAEZC,EAAe,CACnBlB,MAAO,GACPE,OAAQ,GACRc,SAAU,IAgBZ,IAAMG,EAAQC,aAbd,WAAoD,IAA/BL,EAA8B,uDAAtBG,EAAcG,EAAQ,uCACjD,OAAOA,EAAOtB,MACZ,KAAKkB,EACH,MAAO,CACLjB,MAAOqB,EAAOrB,MACdE,OAAQmB,EAAOnB,OACfc,SAAS,GAAD,mBAAMD,EAAMC,UAAZ,CAAsBK,EAAOlB,OAEzC,QACE,OAAOY,MAcEO,MARf,WACE,OACE,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,OCnBSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a3847cd9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass QuoteDiv extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.newQuote = this.newQuote.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.newQuote()\r\n    }\r\n\r\n    newQuote = () => {\r\n      fetch('https://api.quotable.io/random?maxLength=200')\r\n        .then(response => response.json())\r\n        .then(response => this.props.dispatch({\r\n          type: 'NEW_QUOTE',\r\n          quote: response.content,\r\n          author: response.author,\r\n          _id: response._id,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"QuoteDiv\">\r\n              <div id=\"quote-box\">\r\n                <p id=\"text\">{this.props.quote}</p>\r\n                <p id=\"author\">— {this.props.author}</p>\r\n                <div id=\"buttons\">\r\n                    <a className=\"btn btn-primary\" id=\"tweet-quote\" target=\"_blank\" rel=\"noopener noreferrer\" href={'https://twitter.com/intent/tweet?text=' + this.props.quote + '%0A%0A— ' + this.props.author}>\r\n                      Tweet Quote\r\n                    </a>\r\n                    <button id=\"new-quote\" className=\"btn btn-primary\" onClick={this.newQuote}>\r\n                      New Quote\r\n                    </button>\r\n                </div>\r\n              </div>\r\n              <div id=\"credit\">\r\n                by <a id=\"credit-name\" href=\"https://www.linkedin.com/in/nicolas-poore/\" target=\"_blank\" rel=\"noopener noreferrer\">Nicolás Poore</a>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  quote: state.quote,\r\n  author: state.author,\r\n  id_array: state.id_array,\r\n})\r\nexport default connect(mapStateToProps)(QuoteDiv);","import './App.css';\nimport QuoteDiv from './QuoteDiv.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst NEW_QUOTE = 'NEW_QUOTE'\n\nconst defaultState = {\n  quote: '',\n  author: '',\n  id_array: []\n}\n\nfunction rootReducer(state = defaultState, action) {\n  switch(action.type) {\n    case NEW_QUOTE:\n      return {\n        quote: action.quote,\n        author: action.author,\n        id_array: [...state.id_array, action._id]\n      }\n    default:\n      return state\n  }\n}\n\nconst store = createStore(rootReducer);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <QuoteDiv />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}